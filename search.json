[{"title":"Android自定义控件小结","url":"/2021/01/14/Android%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6%E5%B0%8F%E7%BB%93/","content":"<h3 id=\"绘制文本drawText\"><a href=\"#绘制文本drawText\" class=\"headerlink\" title=\"绘制文本drawText\"></a>绘制文本<code>drawText</code></h3><ul>\n<li><p>计算文本的宽度、高度</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">float</span> textWidth = paint.measureText(text);</span><br><span class=\"line\">Paint.FontMetrics fontMetrics = paint.getFontMetrics();</span><br><span class=\"line\"><span class=\"keyword\">float</span> textHeight = fontMetrics.top - fontMetrics.bottom;</span><br></pre></td></tr></table></figure></li>\n<li><p>绘制文本，文本绘制起始点在文本矩形的左下角，注意起始点(floatX, floatY)</p>\n<a id=\"more\"></a>\n\n<p><code>canvas.drawText(text, floatX, floatY, paint);</code> </p>\n</li>\n<li><p>利用path绘制倾斜文本</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">Path path = <span class=\"keyword\">new</span> Path();</span><br><span class=\"line\">path.moveTo(floatX, floatY);<span class=\"comment\">//移到起始点</span></span><br><span class=\"line\">path.lineTo(endX, endY);<span class=\"comment\">// 描路径</span></span><br><span class=\"line\">canvas.drawTextOnPath(text, path, <span class=\"number\">0</span>, <span class=\"number\">0</span>, paint);</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h3 id=\"绘制圆角矩形\"><a href=\"#绘制圆角矩形\" class=\"headerlink\" title=\"绘制圆角矩形\"></a>绘制圆角矩形</h3><ul>\n<li><p>直接绘制<code>drawRoundRect</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">RectF rect = <span class=\"keyword\">new</span> RectF(left, top, right, bottom);</span><br><span class=\"line\">paint.setStyle(Paint.Style.FILL);</span><br><span class=\"line\">canvas.drawRoundRect(rect, floatRX, floatRY, paint);</span><br></pre></td></tr></table></figure></li>\n<li><p>通过裁剪路径<code>clipPath</code>得到，但画布可绘制范围只剩该矩形区域</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">float</span> r = <span class=\"number\">3</span>; </span><br><span class=\"line\"><span class=\"keyword\">float</span>[] radiusArray = &#123;r,r, r,r, r,r, r,r&#125;;<span class=\"comment\">//对应左、上、右、下四个角的圆角半径</span></span><br><span class=\"line\">Path path = <span class=\"keyword\">new</span> Path();</span><br><span class=\"line\">RectF rect = <span class=\"keyword\">new</span> RectF(left, right, top, bottom);</span><br><span class=\"line\">path.addRoundRect(rect, radiusArray, Path.Direction.CW);</span><br><span class=\"line\">canvas.clipPath(path);</span><br></pre></td></tr></table></figure>\n\n\n</li>\n</ul>\n<h3 id=\"绘制圆弧drawArc\"><a href=\"#绘制圆弧drawArc\" class=\"headerlink\" title=\"绘制圆弧drawArc\"></a>绘制圆弧<code>drawArc</code></h3><ul>\n<li><p>默认按顺时针方向绘制，设置圆弧所在区域矩形、起始的角度、扫过的角度</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">RectF rect = <span class=\"keyword\">new</span> RectF(left, top, right, bottom);</span><br><span class=\"line\">paint.setStyle(Paint.Style.STROKE);</span><br><span class=\"line\">paint.setStrokeCap(Paint.Cap.ROUND);<span class=\"comment\">// 设置描边线为圆角类型</span></span><br><span class=\"line\">canvas.drawArc(rect, startAngle, sweepAngle, <span class=\"keyword\">false</span>, paint);</span><br></pre></td></tr></table></figure></li>\n<li><p>设置圆弧渐变色</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 位置数组与色值数组对应</span></span><br><span class=\"line\"><span class=\"keyword\">int</span>[] GRADIENT_COLORS = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[]&#123;Color.parseColor(<span class=\"string\">&quot;#F257B0&quot;</span>), Color.parseColor(<span class=\"string\">&quot;#688FFD&quot;</span>)&#125;;</span><br><span class=\"line\"><span class=\"comment\">// 取值范围0-1，0和1为3点钟位置，0.25为6点钟位置，0.5为9点钟位置，0.75为12点位置</span></span><br><span class=\"line\"><span class=\"keyword\">float</span>[] GRADIENT_POSITION = <span class=\"keyword\">new</span> <span class=\"keyword\">float</span>[]&#123;<span class=\"number\">0.45f</span>, <span class=\"number\">1.0f</span>&#125;;</span><br><span class=\"line\">SweepGradient gradient = <span class=\"keyword\">new</span> SweepGradient(cx, cy, GRADIENT_COLORS, GRADIENT_POSITION);</span><br><span class=\"line\">paint.setShader(gradient);</span><br><span class=\"line\">canvas.drawArc(rect, startAngle, sweepAngle, <span class=\"keyword\">false</span>, paint);</span><br></pre></td></tr></table></figure>\n\n\n</li>\n</ul>\n<h3 id=\"其它\"><a href=\"#其它\" class=\"headerlink\" title=\"其它\"></a>其它</h3><ul>\n<li><p>androd屏幕坐标参考系，水平右方向为x轴正方向，水平左方向为x轴负方向，竖直下方向为y轴正方向，竖直上方向为y轴负方向；</p>\n</li>\n<li><p>画布<code>canvas</code>基本操作</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">canvas.translate(dx, dy); <span class=\"comment\">// 移动画布中心</span></span><br><span class=\"line\">canvas.rotate(degree); <span class=\"comment\">// 画布旋转角度degree</span></span><br></pre></td></tr></table></figure>\n\n\n</li>\n</ul>\n<ul>\n<li><p>绘制时使用屏幕的实际尺寸，不能直接使用<code>3px</code>;</p>\n<p><code>int width = context.getResources().getDimensionPixelSize(R.dimen.dp_3px);</code></p>\n</li>\n<li><p>Math类的常用运算</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">Math.toRadians(<span class=\"number\">180</span>);<span class=\"comment\">//角度转弧度</span></span><br><span class=\"line\">Math.toDegrees(pi);<span class=\"comment\">//弧度转角度</span></span><br><span class=\"line\">Math.sin(radians);<span class=\"comment\">//计算三角函数sin值，传入弧度</span></span><br><span class=\"line\">Math.ceil(<span class=\"number\">12.7</span>);<span class=\"comment\">//得13 取天花板值</span></span><br><span class=\"line\">Math.floor(<span class=\"number\">12.7</span>);<span class=\"comment\">//得12 取地板值</span></span><br><span class=\"line\">Math.sqrt(<span class=\"number\">4</span>);<span class=\"comment\">// 求开方</span></span><br><span class=\"line\">Math.pow(x,y);<span class=\"comment\">//求x的y次方</span></span><br><span class=\"line\">Math.round(x);<span class=\"comment\">//求整，四舍五入</span></span><br><span class=\"line\">Math.min(x,y); <span class=\"comment\">//最小值</span></span><br><span class=\"line\">Math.max(x,y); <span class=\"comment\">//最大值\t</span></span><br><span class=\"line\">Math.abs(x);<span class=\"comment\">//绝对值</span></span><br><span class=\"line\">Math.random();<span class=\"comment\">// 返回0-1随机数</span></span><br></pre></td></tr></table></figure></li>\n<li><p>浮点数保持精度计算<code>BigDecimal</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">BigDecimal bigDecimal = <span class=\"keyword\">new</span> BigDecimal(<span class=\"string\">&quot;3.14159&quot;</span>);</span><br><span class=\"line\">bigDecimal.setScale(<span class=\"number\">2</span>, BigDecimal.ROUND_DOWN);<span class=\"comment\">// 取小数点后2位</span></span><br></pre></td></tr></table></figure>\n\n\n</li>\n</ul>\n","categories":["工作小结"],"tags":["android","自定义控件"]},{"title":"通过CentOS的Docker部署calibre-web搭建私人电子图书馆","url":"/2021/01/13/docker-web%E6%90%AD%E5%BB%BA/","content":"<h3 id=\"前期准备工作\"><a href=\"#前期准备工作\" class=\"headerlink\" title=\"前期准备工作\"></a>前期准备工作</h3><ul>\n<li><p>本地电脑安装Calibre, windows|Mac|Linux各种版本都有，建立本地的书库目录books用于存放电子书及metadata数据库，我这里用的是windows；</p>\n</li>\n<li><p>在windows是安装好与服务器连接的软件Xshell和用于传输文件的Sftp，或是其它同样功能的软件也可以</p>\n</li>\n<li><p>准备好服务器，我这里是选用的centos7，有NAS的也一样可以下载docker进行部署</p>\n<a id=\"more\"></a>\n\n</li>\n</ul>\n<h3 id=\"搭建calibre-web应用\"><a href=\"#搭建calibre-web应用\" class=\"headerlink\" title=\"搭建calibre-web应用\"></a>搭建calibre-web应用</h3><ul>\n<li><p>首先通过<code>docker -v</code> 检查是否安装了docker, 如果未安装通过以下命令安装： <code>curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun</code> 是否需要使用Aliyun镜像看个人情况。</p>\n<img src=\"/2021/01/13/docker-web%E6%90%AD%E5%BB%BA/docker_version.png\" alt=\"docker_version\" style=\"zoom:100%;\">  \n\n\n\n</li>\n</ul>\n<ul>\n<li><p>使用docker命令从github拉取calibre-web应用，github上下载量较高有以下3个：linuxserver/calibre-web，technosoft2000/calibre-web，janeczku/calibre-web, 我用的是第1个，有不少同学说linuxserver/calibre-web不能进行格式转换，但通过正常配置是可以正常转换格式的；<code>docker pull linuxserver/calibre-web</code> 拉取应用，</p>\n<img src=\"/2021/01/13/docker-web%E6%90%AD%E5%BB%BA/pull_error.png\" alt=\"pull_error\" style=\"zoom:100%;\">  \n\n\n\n</li>\n</ul>\n<p>  如果报错<code>Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?</code> 说明docker应用进程没有正常启动 ，需要先手动启动<code>systemctl restart docker.service</code>，再拉取应用。</p>\n<ul>\n<li><p>在docker中创建calibre-web应用：</p>\n<p><code>docker create \\    --name=calibre-web \\    -e PUID=1000 \\    -e PGID=1000 \\    -e TZ=Asia/Shanghai \\ -p 8083:8083 \\    -e DOCKER_MODS=linuxserver/calibre-web:calibre \\ -v /data/calibre/config:/config \\    -v /data/calibre/books:/books \\ --restart unless-stopped \\    linuxserver/calibre-web</code></p>\n<p>关键参数说明：<code>--name=calibre-web</code>应用名称， <code>-p 8083:8083</code> 端口映射，配置成功后通过该 端口访问，记得防火墙中要放开该端口，否则无法访问 ，<code>-e DOCKER_MODS=linuxserver/calibre-web:calibre</code>是否需要支持格式功能，仅x86_64的cpu支持（但还需要在calibre-web中进行配置），<code>-v /data/calibre/config:/config</code>服务器本地与calibre应用配置文件夹映射关系，用于存放用户数据等，<code>-v /data/calibre/books:/books</code>服务器本地与calibre书籍目录映射关系。</p>\n<img src=\"/2021/01/13/docker-web%E6%90%AD%E5%BB%BA/install_calibre.png\" alt=\"install_calibre\" style=\"zoom:100%;\">\n\n\n\n</li>\n</ul>\n<ul>\n<li><p>在centos中使用mkdir命令创建目录/data/calibre/books和/data/calibre/config，并授予文件夹读写权限</p>\n<img src=\"/2021/01/13/docker-web%E6%90%AD%E5%BB%BA/mkdir.png\" alt=\"mkdir\" style=\"zoom:100%;\">\n</li>\n<li><p>在windows下Calibre本地书库中books，使用xftp将本地windows书库中的所有电子书导入到centos服务器<code>/data/calibre/books</code> 目录下，注意：books目录下的除了所有书籍文件夹上传外，metadata.db数据库也一并上传到centos7中的/data/calibre/books目录下，不然会报“数据库路径无效，请输入正确的路径”</p>\n<img src=\"/2021/01/13/docker-web%E6%90%AD%E5%BB%BA/translate_books.png\" alt=\"tanslate_books\" style=\"zoom:100%;\">\n</li>\n<li><p>在服务中开启calibre-web应用<code>docker start calibre-web</code>, 通过浏览器打开<code>http://host:8083</code>进入calibre-web，在calibre书库配置中填写<code>/books</code>即映射到centos服务器中的<code>/data/calibre/books</code>目录下；如果提示“数据库路径无效，请输入正确的路径”，在本地windows中Calibre软件重新创建一个书库文件夹，并将其文件夹下的metadata.db文件单独上传上述centos服务器路径；并对文件夹授予读写权限<code> chmod -R 777 /data/calibre/</code></p>\n<img src=\"/2021/01/13/docker-web%E6%90%AD%E5%BB%BA/base_config.png\" alt=\"base_config\" style=\"zoom:100%;\">\n</li>\n<li><p>使用管理员账号admin/admin123登录calibre-web，并在设置中心修改为语言为中文</p>\n<img src=\"/2021/01/13/docker-web%E6%90%AD%E5%BB%BA/login.png\" alt=\"login\" style=\"zoom:100%;\">\n</li>\n<li><p>登录成功，界面默认为英文</p>\n<img src=\"/2021/01/13/docker-web%E6%90%AD%E5%BB%BA/login_success.png\" alt=\"login_success\" style=\"zoom:75%;\">\n</li>\n<li><p>点击用户名admin，在Language下修改语言为中文</p>\n<img src=\"/2021/01/13/docker-web%E6%90%AD%E5%BB%BA/lang_config.png\" alt=\"lang_config\" style=\"zoom:100%;\">\n</li>\n<li><p>修改成功的中文界面</p>\n<img src=\"/2021/01/13/docker-web%E6%90%AD%E5%BB%BA/lang_cn.png\" alt=\"lang_cn\" style=\"zoom:100%;\">\n\n\n\n</li>\n</ul>\n<h3 id=\"Calibre-web功能进阶：格式转换-amp-邮件转发至Kindle\"><a href=\"#Calibre-web功能进阶：格式转换-amp-邮件转发至Kindle\" class=\"headerlink\" title=\"Calibre-web功能进阶：格式转换 &amp;邮件转发至Kindle\"></a>Calibre-web功能进阶：格式转换 &amp;邮件转发至Kindle</h3><ul>\n<li><p>找到 管理权限 - 配置 - 编辑基本配置 - 扩展程序配置，在“Calibre电子书转换路径”栏中填写 <code>/usr/bin/ebook-convert</code> 在Unrar程序路径填<code>/usr/bin/unrar</code>，注意在容器创建时添加了参数<code>-e DOCKER_MODS=linuxserver/calibre-web:calibre</code> 才能支持格式转换，另外，还需要在centos下新建目录并在路径下添加权限、添加权限、添加权限，重要的事说3遍，<code>chmod -R 777 /usr/bin/ebook-convert</code> </p>\n</li>\n<li><p>在书籍编辑界面对书籍进行格式转换，在任务列表中可以查看转换进度，如果没有给目录<code>/usr/bin/ebook-convert</code>添加权限，在转换进度的最后时刻会提示失败。</p>\n<hr>\n</li>\n<li><p>找到 管理权限 - SMTP邮件服务器配置 - 编辑邮件服务器配置，以163邮箱为例</p>\n</li>\n</ul>\n","categories":["瞎折腾"],"tags":["centos","docker","calibre-web","电子书"]}]